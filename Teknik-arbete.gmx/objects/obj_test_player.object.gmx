<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_down_alpha</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision check
//phy_fixed_rotation = true;
//spd = 5
instance_create(64,64,obj_player_hitbox)

globalvar target_x 
global.target_x = x
globalvar target_y
global.target_y = y

globalvar movment
global.movment = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set target
if(global.movment == true){

if(mouse_check_button_pressed(mb_left)){
    global.target_x = mouse_x
    global.target_y = mouse_y
}

///movement and rotation
var turn = point_direction(x,y,target_x,target_y);

if point_distance(x,y, target_x, target_y) &lt;= speed{
    speed = 0
    x = target_x
    y = target_y
}else{
if(turn &gt; 100 &amp;&amp; turn &lt; 170){
    sprite_index = spr_player_up_alpha
    with(obj_player_hitbox){
        sprite_index = spr_player_hitbox_up_left
    }
}
if(turn &gt; 190 &amp;&amp; turn &lt; 260){
    sprite_index = spr_player_down_alpha
    with(obj_player_hitbox){
        sprite_index = spr_player_hitbox_down_left
    }
}
if(turn &gt; 280 &amp;&amp; turn &lt; 350){
    sprite_index = spr_player_down_alpha
    with(obj_player_hitbox){
        sprite_index = spr_player_hitbox_down_right
    }
}
if(turn &lt; 80 &amp;&amp; turn &gt; 10){
    sprite_index = spr_player_up_alpha
    with(obj_player_hitbox){
        sprite_index = spr_player_hitbox_up_right
    }
}
if(turn &lt; 10 || turn &gt; 350){
    sprite_index = spr_player_right_alpha
    with(obj_player_hitbox){
        sprite_index = spr_player_hitbox_right
    }
}
if(turn &lt; 100 &amp;&amp; turn &gt; 80){
    sprite_index = spr_player_up_alpha
    with(obj_player_hitbox){
        sprite_index = spr_player_hitbox_up
    }
}
if(turn &lt; 190 &amp;&amp; turn &gt; 170){
    sprite_index = spr_player_left_alpha
    with(obj_player_hitbox){
        sprite_index = spr_player_hitbox_left
    }
}
if(turn &lt; 280 &amp;&amp; turn &gt; 260){
    sprite_index = spr_player_down_alpha
    with(obj_player_hitbox){
        sprite_index = spr_player_hitbox_down
    }
}


move_towards_point(target_x,target_y,10)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_test_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collison with wall
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
