<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_gamma</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>go_x = x
go_y = y
sprite_index = spr_player_gamma;
image_speed = 0;
refill = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(vk_escape)){
    global.refill = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.player_movment == true){
    if(mouse_check_button(mb_left) &amp;&amp; global.mouse_over_desk = false){
        go_x = obj_mouse.x
        go_y = obj_mouse.y
        if(mp_grid_path(global.grid,global.player_path,x,y,go_x,go_y,true) == true){
            mp_grid_path(global.grid,global.player_path,x,y,go_x,go_y,true)
        
            path_set_kind(global.player_path, 1)
            path_set_precision(global.player_path, 8)
            path_start(global.player_path,6*global.time_multi,path_action_stop,true)
        }
    
        
    }
    
    var turn = point_direction(x,y,go_x, go_y);
    if(global.refill == true){
        if (turn != 0){
            if(turn &gt; 100 &amp;&amp; turn &lt; 170){
                sprite_index = spr_player_up_refill
                image_speed = .25
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_up_left
                }
            }
            if(turn &gt; 190 &amp;&amp; turn &lt; 260){
                sprite_index = spr_player_down_refill
                image_speed = .25
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_down_left
                    
                }
            }
            if(turn &gt; 280 &amp;&amp; turn &lt; 350){
                sprite_index = spr_player_down_refill
                    image_speed = .25
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_down_right
                }
            }
            if(turn &lt; 80 &amp;&amp; turn &gt; 10){
                sprite_index = spr_player_up_refill
                    image_speed = .25
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_up_right
                }
            }
            if((turn &lt; 10 || turn &gt; 350) &amp;&amp; turn != 0){
                sprite_index = spr_player_right_refill
                    image_speed = .25
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_right
                }
            }
            if(turn &lt; 100 &amp;&amp; turn &gt; 80){
                sprite_index = spr_player_up_refill
                    image_speed = .25
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_up
                }
            }
            if(turn &lt; 190 &amp;&amp; turn &gt; 170){
                sprite_index = spr_player_left_refill
                    image_speed = .25
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_left
                }
            }
            if(turn &lt; 280 &amp;&amp; turn &gt; 260){
                sprite_index = spr_player_down_refill
                    image_speed = .25
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_down
                }
            }
            if(point_distance(x,y,go_x,go_y) &lt;= (6*global.time_multi)){
                speed = 0
                x = go_x
                y = go_y
                image_speed = 0
            }
        }
    }else{       
        if (turn != 0){
            if(turn &gt; 100 &amp;&amp; turn &lt; 170){
                sprite_index = spr_player_gamma // orginal sprite spr_player_up_alpha
                image_speed = 0; // orginal speed .25
                image_index = 4;
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_up_left
                }
            }
            if(turn &gt; 190 &amp;&amp; turn &lt; 260){
                sprite_index = spr_player_gamma
                image_speed = 0
                image_index = 0
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_down_left
                    
                }
            }
            if(turn &gt; 280 &amp;&amp; turn &lt; 350){
                sprite_index = spr_player_gamma
                    image_speed = 0
                    image_index = 0
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_down_right
                }
            }
            if(turn &lt; 80 &amp;&amp; turn &gt; 10){
                sprite_index = spr_player_gamma
                    image_speed = 0
                    image_index = 3
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_up_right
                }
            }
            if((turn &lt; 10 || turn &gt; 350) &amp;&amp; turn != 0){
                sprite_index = spr_player_gamma
                    image_speed = 0
                    image_index = 1
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_right
                }
            }
            if(turn &lt; 100 &amp;&amp; turn &gt; 80){
                sprite_index = spr_player_gamma
                    image_speed = 0
                    image_index = 3
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_up
                }
            }
            if(turn &lt; 190 &amp;&amp; turn &gt; 170){
                sprite_index = spr_player_gamma
                    image_speed = 0
                    image_index = 2
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_left
                }
            }
            if(turn &lt; 280 &amp;&amp; turn &gt; 260){
                sprite_index = spr_player_gamma
                    image_speed = 0
                    image_index = 0
                with(obj_player_hitbox){
                    sprite_index = spr_player_hitbox_down
                }
            }
            if(point_distance(x,y,go_x,go_y) &lt;= (6*global.time_multi)){
                speed = 0.5;
                x = go_x
                y = go_y
                image_speed = 0
            }
        }
    }


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
